+ annoncer Syntaxe invalide : pas d'argument
+ set +x
+ run_prog 1
+ local xcode=1 xc
+ shift
+ echo     $ ./exdir > test.dir/stdout 2> test.dir/stderr
+ ./exdir
+ xc=1
+ test 1 -ne 1
+ test_stderr test.dir/stderr
+ wc -l
+ test 1 -gt 0
+ annoncer Syntaxe invalide : trop d'arguments
+ set +x
+ run_prog 1 a b c
+ local xcode=1 xc
+ shift
+ echo     $ ./exdir a b c > test.dir/stdout 2> test.dir/stderr
+ ./exdir a b c
+ xc=1
+ test 1 -ne 1
+ test_stderr test.dir/stderr
+ wc -l
+ test 1 -gt 0
+ annoncer Syntaxe invalide : fichier inexistant
+ set +x
+ run_prog 1 test.dir/nonexistant
+ local xcode=1 xc
+ shift
+ echo     $ ./exdir test.dir/nonexistant > test.dir/stdout 2> test.dir/stderr
+ ./exdir test.dir/nonexistant
+ xc=1
+ test 1 -ne 1
+ test_stderr test.dir/stderr
+ wc -l
+ test 1 -gt 0
+ annoncer Syntaxe invalide : fichier régulier
+ set +x
+ touch test.dir/regulier
+ run_prog 1 test.dir/regulier
+ local xcode=1 xc
+ shift
+ echo     $ ./exdir test.dir/regulier > test.dir/stdout 2> test.dir/stderr
+ ./exdir test.dir/regulier
+ xc=1
+ test 1 -ne 1
+ test_stderr test.dir/stderr
+ wc -l
+ test 1 -gt 0
+ rm -f test.dir/regulier
+ annoncer Syntaxe invalide : répertoire non lisible
+ set +x
+ mkdir test.dir/illisible
+ chmod -r test.dir/illisible
+ run_prog 1 test.dir/illisible
+ local xcode=1 xc
+ shift
+ echo     $ ./exdir test.dir/illisible > test.dir/stdout 2> test.dir/stderr
+ ./exdir test.dir/illisible
+ xc=1
+ test 1 -ne 1
+ test_stderr test.dir/stderr
+ wc -l
+ test 1 -gt 0
+ rm -rf test.dir/illisible
+ annoncer Syntaxe invalide : répertoire non exe
+ set +x
+ mkdir test.dir/noxbit
+ chmod -x test.dir/noxbit
+ run_prog 1 test.dir/noxbit
+ local xcode=1 xc
+ shift
+ echo     $ ./exdir test.dir/noxbit > test.dir/stdout 2> test.dir/stderr
+ ./exdir test.dir/noxbit
+ xc=1
+ test 1 -ne 1
+ test_stderr test.dir/stderr
+ wc -l
+ test 1 -gt 0
+ rm -rf test.dir/noxbit
+ annoncer Un répertoire vide
+ set +x
+ creer_arbo test.dir/files 0 0 0
+ set +x
+ run_prog 0 test.dir/files
+ local xcode=0 xc
+ shift
+ echo     $ ./exdir test.dir/files > test.dir/stdout 2> test.dir/stderr
+ ./exdir test.dir/files
+ xc=0
+ test 0 -ne 0
+ test_file /tmp/1000 0
+ local actual
+ wc -l
+ ls -l /tmp/1000
+ actual=1
+ test 0 -eq 0
+ rm -rf test.dir/files /tmp/1000
+ annoncer Un répertoire contenant un fichier non exe
+ set +x
+ creer_arbo test.dir/files 0 1 0
+ set +x
+ run_prog 0 test.dir/files
+ local xcode=0 xc
+ shift
+ echo     $ ./exdir test.dir/files > test.dir/stdout 2> test.dir/stderr
+ ./exdir test.dir/files
+ xc=0
+ test 0 -ne 0
+ test_file /tmp/1000 0
+ local actual
+ wc -l
+ ls -l /tmp/1000
+ actual=1
+ test 0 -eq 0
+ rm -rf test.dir/files /tmp/1000
+ annoncer Un répertoire contenant un fichier exe
+ set +x
+ creer_arbo test.dir/files 0 1 1
+ set +x
+ run_prog 0 test.dir/files
+ local xcode=0 xc
+ shift
+ echo     $ ./exdir test.dir/files > test.dir/stdout 2> test.dir/stderr
+ ./exdir test.dir/files
+ xc=0
+ test 0 -ne 0
+ test_file /tmp/1000 1
+ local actual
+ wc -l
+ ls -l /tmp/1000
+ actual=2
+ test 1 -eq 1
+ rm -rf test.dir/files /tmp/1000
+ annoncer Un répertoire contenant un lien symb
+ set +x
+ mkdir test.dir/files
+ ln -s /usr/bin/ls test.dir/files/ls
+ run_prog 0 test.dir/files
+ local xcode=0 xc
+ shift
+ echo     $ ./exdir test.dir/files > test.dir/stdout 2> test.dir/stderr
+ ./exdir test.dir/files
+ xc=0
+ test 0 -ne 0
+ test_file /tmp/1000 0
+ local actual
+ wc -l
+ ls -l /tmp/1000
+ actual=1
+ test 0 -eq 0
+ rm -rf test.dir/files /tmp/1000
+ annoncer Un répertoire contenant un mix
+ set +x
+ creer_arbo test.dir/files 0 35 15
+ set +x
+ run_prog 0 test.dir/files
+ local xcode=0 xc
+ shift
+ echo     $ ./exdir test.dir/files > test.dir/stdout 2> test.dir/stderr
+ ./exdir test.dir/files
+ xc=0
+ test 0 -ne 0
+ test_file /tmp/1000 15
+ local actual
+ wc -l
+ ls -l /tmp/1000
+ actual=16
+ test 15 -eq 15
+ rm -rf test.dir/files /tmp/1000
+ annoncer Une hiérarchie à 2 niveaux
+ set +x
+ creer_arbo test.dir/files 1 15 7
+ set +x
+ run_prog 0 test.dir/files
+ local xcode=0 xc
+ shift
+ echo     $ ./exdir test.dir/files > test.dir/stdout 2> test.dir/stderr
+ ./exdir test.dir/files
+ xc=0
+ test 0 -ne 0
+ test_file /tmp/1000 14
+ local actual
+ + ls -l /tmp/1000wc
 -l
+ actual=15
+ test 14 -eq 14
+ rm -rf test.dir/files /tmp/1000
+ annoncer Une hiérarchie à 2 niveaux avec un répertoire non lisible
+ set +x
+ creer_arbo test.dir/files 1 15 7
+ set +x
+ chmod -r test.dir/files/0.d
+ run_prog 0 test.dir/files
+ local xcode=0 xc
+ shift
+ echo     $ ./exdir test.dir/files > test.dir/stdout 2> test.dir/stderr
+ ./exdir test.dir/files
+ xc=0
+ test 0 -ne 0
+ test_file /tmp/1000 7
+ local actual
+ ls -l /tmp/1000
+ wc -l
+ actual=8
+ test 7 -eq 7
+ chmod +r test.dir/files/0.d
+ rm -rf test.dir/files /tmp/1000
+ annoncer Une hiérarchie à 2 niveaux avec un répertoire non exe
+ set +x
+ creer_arbo test.dir/files 1 15 7
+ set +x
+ chmod -x test.dir/files/0.d
+ run_prog 0 test.dir/files
+ local xcode=0 xc
+ shift
+ echo     $ ./exdir test.dir/files > test.dir/stdout 2> test.dir/stderr
+ ./exdir test.dir/files
+ xc=0
+ test 0 -ne 0
+ test_file /tmp/1000 7
+ local actual
+ wc -l
+ ls -l /tmp/1000
+ actual=8
+ test 7 -eq 7
+ chmod +x test.dir/files/0.d
+ rm -rf test.dir/files /tmp/1000
+ annoncer Une hiérarchie à plusieurs niveaux
+ set +x
+ creer_arbo test.dir/files 10 50 25
+ set +x
+ run_prog 0 test.dir/files
+ local xcode=0 xc
+ shift
+ echo     $ ./exdir test.dir/files > test.dir/stdout 2> test.dir/stderr
+ ./exdir test.dir/files
+ xc=0
+ test 0 -ne 0
+ test_file /tmp/1000 275
+ local actual
+ ls -l /tmp/1000
+ wc -l
+ actual=276
+ test 275 -eq 275
+ rm -rf test.dir/files /tmp/1000
+ annoncer Test avec valgrind
+ set +x
+ VALG=valgrind --leak-check=full --error-exitcode=100 ./exdir test.dir/files
+ echo     $ valgrind --leak-check=full --error-exitcode=100 ./exdir test.dir/files > test.dir/stdout 2> test.dir/stderr
+ valgrind --leak-check=full --error-exitcode=100 ./exdir test.dir/files
+ test 1 = 100
+ printf \n=== Succès pour tous les tests\n\n
+ rm -rf test.dir/files /tmp/1000
+ rm -rf test.dir
+ exit 0
